---
title: "Rekruttering til uddannelse: Analyse"
format: 
  html:
    toc: true
    self-contained: true
    code-fold: true
    code-tools: true
    number-sections: true
    embed-resources: true
editor: source
author: Christian Heide
date: today
theme: flatly
execute: 
  cache: false
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
output: html_document
---

Dette dokument ineholder hovedanalysen til projektet "Rekruttering til uddannelse". Data er bearbejdet i et seperat script, så formålet med dette dokument er alene at vise hvordan analysen samt figurer, tabeller mm. er produceret. For gennemsigtighedens skyld har jeg dog inkluderet data-transformationer i dette script

```{r}
# Libraries
library(tidyverse)
library(gsynth)
library(panelView)
library(xtable)
library(patchwork)
library(stargazer)

# Data
df <- readRDS("data/processed/ansøgninger_1997-2024.RDS")

# Functions
lm_impute <- function(df, missing_var, rhs, education) { # To impute missing values
  
  edu_df <- df |> 
    filter(uddannelse == education)
  
  # Indices of rows with missing values
  missing_rows <- which(is.na(df[[missing_var]]) & df$uddannelse == education)
  
  if (nrow(edu_df) > length(missing_rows)) {
    
      # Linear model
    temp_model <- lm(
      formula = as.formula(paste(missing_var, "~", rhs)),
      data = edu_df,
      na.action = na.exclude
      )
    
    # Using model to impute missing values
    df[[missing_var]][missing_rows] <- predict(temp_model, df[missing_rows,])
    
  }
  
  return(df)
}
```

# Transformationer

Til brug for min primære uafhængige variabel transformerer jeg førsteprioritetsansøgninger, så: 1) Sygeplejerskeuddannelsen opdeles i kvote 1 og kvote 2 ansøgninger, og 2) Læreruddannelsen alene inkluderer ansøgninger med et karaktergennemsnit over 7. Jeg transformerer naturligvis også kontrolenhederne, så jeg sammenligner æbler med æbler :)

## Transformation for sygeplejerskeuddannelsen

```{r}
# Opdeler sygeplejerskeuddannelsen i kvote 1 og 2
# Ekstrapolerer først trenden i andel kvote 2 ansøgere blandt sygeplejersker og
# regner antal kvote 2 ud
df_sygeplejerske <- df

# Lineær imputing
for (u in unique(df_sygeplejerske$uddannelse)) {
  df_sygeplejerske <- df_sygeplejerske |> 
    lm_impute(missing_var = "andel_kvote2_prio1", rhs = "år", education = u) |> 
    lm_impute(missing_var = "andel_kvote2_total", rhs = "år", education = u)
}

df_sygeplejerske <- df_sygeplejerske |> 
  mutate(
    ansøgninger_prio1_kvote2 = if_else(
      år < 2009,
      ansøgninger_prio1 * andel_kvote2_prio1,
      ansøgninger_prio1_kvote2),
    ansøgninger_total_kvote2 = if_else(
      år < 2009,
      ansøgninger_total * andel_kvote2_total,
      ansøgninger_total_kvote2))

# Bruger dette til at opdele på kvote 1 og 2
df_sygeplejerske <- df_sygeplejerske |> 
  
  # Kvote 1 ansøgninger for sygeplejersker
  mutate(
    ansøgninger_main = ansøgninger_prio1 - ansøgninger_prio1_kvote2,
    ansøgninger_robust_total = ansøgninger_total - ansøgninger_total_kvote2,
    uddannelse = if_else(
      treatment == "Sygeplejerskestrejke",
      "Sygeplejerske (kvote 1)",
      uddannelse))

# Kvote 2 ansøgninger for sygeplejersker
df_sygeplejerske_k2 <- df

# Lineær imputing
for (u in unique(df_sygeplejerske_k2$uddannelse)) {
  df_sygeplejerske_k2 <- df_sygeplejerske_k2 |> 
    lm_impute(missing_var = "andel_kvote2_prio1", rhs = "år", education = u) |> 
    lm_impute(missing_var = "andel_kvote2_total", rhs = "år", education = u)
}

df_sygeplejerske_k2 <- df_sygeplejerske_k2 |> 
  mutate(
    ansøgninger_prio1_kvote2 = if_else(
      år < 2009,
      ansøgninger_prio1 * andel_kvote2_prio1,
      ansøgninger_prio1_kvote2),
    ansøgninger_total_kvote2 = if_else(
      år < 2009,
      ansøgninger_total * andel_kvote2_total,
      ansøgninger_total_kvote2))

df_sygeplejerske_k2 <- df_sygeplejerske_k2 |> 
  mutate(
    ansøgninger_main = ansøgninger_prio1_kvote2,
    ansøgninger_robust_total = ansøgninger_total_kvote2,
    uddannelse = if_else(
      treatment == "Sygeplejerskestrejke",
      "Sygeplejerske (kvote 2)",
      uddannelse))

```

## Transformation for læreruddannelsen
```{r}
# Begræns læreruddannelsen til dem med at karaktergennemsnit på mindst 7.
# Imputer karaktergennemsnittet for 2009 for årene før

df_lærer <- df |> 
  group_by(uddannelse) |> 
  mutate(
    grade_2009 = ifelse(any(år == 2010), karakter[år == 2009], NA),
    karakter = ifelse(år < 2009 & is.na(karakter), grade_2009, karakter)
  ) |> 
  select(-grade_2009) |> 
  ungroup()

# Beregner andel med karaktergennemsnit over 7
#df_lærer$andel_over7 <- with(df_lærer, (1 - pnorm(7, mean = karakter, sd = 2)))
# Bruger weibul-fordeling. Nedenstående shape-parameter reproducerer den faktiske andel 2021. Ideen er at fordelingen skal være lettere højreskæv,
# fordi det er de optagne, og så må man formode at det er ansøgerne som minimum
# til samme grad. Har kun tal for 2021 at validere mod.
shape <-  2.2
df_lærer$andel_over7 <- with(df_lærer, (1 - pweibull(7, shape = shape, scale = (karakter) / gamma(1 + 1 / shape))))

# Alternativ weibul-fordeling
#shape <- 1.8
#df_lærer$andel_over7 <- with(df_lærer, (1 - pweibull(7, shape = shape, scale = karakter)))

# Transformerer herefter outcome for læreruddannelsen til at være antal med
# snit over 7
df_lærer <- df_lærer |> 
  mutate(
    ansøgninger_main = ansøgninger_prio1 * andel_over7,
    ansøgninger_robust_total = ansøgninger_total * andel_over7,
    uddannelse = if_else(
      treatment == "Lærerlockout",
      "Folkeskolelærer",
      uddannelse))

```



# Metode

## Deskriptiv statistik

### Gennemsnit

Som det kan ses adskiller de to treatede uddannelser fra gennemsnittet for kontroluddannelser, selv når der opdeles på uddannelsesniveau. Det virker dog også tydeligt, at prof. bachelor uddannelser ligner lærer- og sygeplejerskeuddannelserne mest.

```{r}
summary_stats <- data.frame(
  variabel = c(
    "Førsteprioritetsansøgninger",
    "Totale ansøgninger",
    "Andel kvinder (%)",
    "Gennemsnitsalder",
    "Gennemsnitskarakter",
    "Antal uddannelser",
    "Observationer"),
  Lærer = c(
    round(mean(df$ansøgninger_prio1[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    round(mean(df$ansøgninger_total[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    round(mean(df$andel_kvinder_prio1[df$treatment == "Lærerlockout"], na.rm = TRUE)*100, 1),
    round(mean(df$alder[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    round(mean(df$karakter[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    1,
    28),
  Sygeplejerske = c(
    round(mean(df$ansøgninger_prio1[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1),
    round(mean(df$ansøgninger_total[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1), 
    round(mean(df$andel_kvinder_prio1[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE)*100, 1),
    round(mean(df$alder[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1),
    round(mean(df$karakter[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1),
    1,
    28),
  `Prof. bachelor` = c(
    round(mean(df$ansøgninger_prio1[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1),
    round(mean(df$ansøgninger_total[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1), 
    round(mean(df$andel_kvinder_prio1[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE)*100, 1),
    round(mean(df$alder[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1),
    round(mean(df$karakter[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1),
    length(unique(df$uddannelse[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"])),
    length(df$ansøgninger_prio1[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor" & !is.na(df$ansøgninger_prio1)])),
  `Alle uddannelser` = c(
    round(mean(df$ansøgninger_prio1[df$treatment == "Kontrol"], na.rm = TRUE), 1),
    round(mean(df$ansøgninger_total[df$treatment == "Kontrol"], na.rm = TRUE), 1), 
    round(mean(df$andel_kvinder_prio1[df$treatment == "Kontrol"], na.rm = TRUE)*100, 1),
    round(mean(df$alder[df$treatment == "Kontrol"], na.rm = TRUE), 1),
    round(mean(df$karakter[df$treatment == "Kontrol"], na.rm = TRUE), 1),
    length(unique(df$uddannelse[df$treatment == "Kontrol"])),
    length(df$ansøgninger_prio1[df$treatment == "Kontrol" & !is.na(df$ansøgninger_prio1)]))
  )

print(xtable(summary_stats, caption = "Descriptive Statistics for Sample Data"), type = "latex")

```

### Standardafvigelser

```{r}
summary_stats <- data.frame(
  variabel = c(
    "Førsteprioritetsansøgninger",
    "Totale ansøgninger",
    "Andel kvinder (%)",
    "Gennemsnitsalder",
    "Gennemsnitskarakter",
    "Antal uddannelser",
    "Observationer"),
  Lærer = c(
    round(sd(df$ansøgninger_prio1[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    round(sd(df$ansøgninger_total[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    round(sd(df$andel_kvinder_prio1[df$treatment == "Lærerlockout"], na.rm = TRUE)*100, 1),
    round(sd(df$alder[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    round(sd(df$karakter[df$treatment == "Lærerlockout"], na.rm = TRUE), 1),
    1,
    28),
  Sygeplejerske = c(
    round(sd(df$ansøgninger_prio1[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1),
    round(sd(df$ansøgninger_total[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1), 
    round(sd(df$andel_kvinder_prio1[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE)*100, 1),
    round(sd(df$alder[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1),
    round(sd(df$karakter[df$treatment == "Sygeplejerskestrejke"], na.rm = TRUE), 1),
    1,
    28),
  `Prof. bachelor` = c(
    round(sd(df$ansøgninger_prio1[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1),
    round(sd(df$ansøgninger_total[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1), 
    round(sd(df$andel_kvinder_prio1[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE)*100, 1),
    round(sd(df$alder[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1),
    round(sd(df$karakter[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"], na.rm = TRUE), 1),
    length(unique(df$uddannelse[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor"])),
    length(df$ansøgninger_prio1[df$treatment == "Kontrol" & df$uddannelsesniveau == "Prof. bachelor" & !is.na(df$ansøgninger_prio1)])),
  `Alle uddannelser` = c(
    round(sd(df$ansøgninger_prio1[df$treatment == "Kontrol"], na.rm = TRUE), 1),
    round(sd(df$ansøgninger_total[df$treatment == "Kontrol"], na.rm = TRUE), 1), 
    round(sd(df$andel_kvinder_prio1[df$treatment == "Kontrol"], na.rm = TRUE)*100, 1),
    round(sd(df$alder[df$treatment == "Kontrol"], na.rm = TRUE), 1),
    round(sd(df$karakter[df$treatment == "Kontrol"], na.rm = TRUE), 1),
    length(unique(df$uddannelse[df$treatment == "Kontrol"])),
    length(df$ansøgninger_prio1[df$treatment == "Kontrol" & !is.na(df$ansøgninger_prio1)]))
  )

```


## Visualisering af udviklinger

Konklusion: Uanset om vi regner med absolutte eller relative tal, eller kører med en samlet kontrolgruppe eller en opdelt kontrolgruppe, så er der ikke rigtigt nogen god kontrolgruppe - det er meget svært at retfærdiggøre parallelle trends.

::: panel-tabset

### Absolutte tal, 1 kontrolgruppe

```{r}
df |> 
  group_by(år, treatment) |> 
  summarise(ansøgninger = mean(ansøgninger_prio1)) |> 
  ggplot(aes(x = år, y = ansøgninger, color = treatment)) +
  geom_line() +
  geom_vline(xintercept = 2012.5, linetype = "dashed") +
  geom_vline(xintercept = 2020.5, linetype = "dashed") +
  theme_minimal()
```

### Absolutte tal, 3 kontrolgrupper

```{r}
df |> 
  mutate(group = case_when(
    treatment == "Lærerlockout" ~ "Lærer",
    treatment == "Sygeplejerskestrejke" ~ "Sygeplejerske",
    uddannelsesniveau == "Bachelor" ~ "Kontrol - bachelor",
    uddannelsesniveau == "Prof. bachelor" ~ "Kontrol - prof. bach.",
    uddannelsesniveau == "Erhvervsakademi" ~ "Kontrol - EA"
  )) |> 
  filter(!is.na(group)) |> 
  group_by(group, år) |> 
  summarise(ansøgninger = mean(ansøgninger_prio1)) |> 
  ggplot(aes(x = år, y = ansøgninger, color = group)) +
  geom_line() +
  geom_vline(xintercept = 2012.5, linetype = "dashed") +
  geom_vline(xintercept = 2020.5, linetype = "dashed") +
  theme_minimal()
```

### Relative tal, 1 kontrolgruppe

```{r}

df |> 
  group_by(år, treatment) |> 
  summarise(ansøgninger = mean(ansøgninger_prio1)) |> 
  ggplot(aes(x = år, y = log(ansøgninger), color = treatment)) +
  geom_line() +
  geom_vline(xintercept = 2012.5, linetype = "dashed") +
  geom_vline(xintercept = 2020.5, linetype = "dashed") +
  theme_minimal()
```

### Relative tal, 3 kontrolgrupper

```{r}

df |> 
  mutate(group = case_when(
    treatment == "Lærerlockout" ~ "Lærer",
    treatment == "Sygeplejerskestrejke" ~ "Sygeplejerske",
    uddannelsesniveau == "Bachelor" ~ "Kontrol - bachelor",
    uddannelsesniveau == "Prof. bachelor" ~ "Kontrol - prof. bach.",
    uddannelsesniveau == "Erhvervsakademi" ~ "Kontrol - EA"
  )) |> 
  filter(!is.na(group)) |> 
  group_by(group, år) |> 
  summarise(ansøgninger = mean(ansøgninger_prio1)) |> 
  ggplot(aes(x = år, y = log(ansøgninger), color = group)) +
  geom_line() +
  geom_vline(xintercept = 2012.5, linetype = "dashed") +
  geom_vline(xintercept = 2020.5, linetype = "dashed") +
  theme_minimal()
```

:::


# Hovedresultater

::: panel-tabset

## Samlet

### Plots

```{r, include=FALSE}
# Estimerer alle modellerne og samler plots

# Estimerer for lærere
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  CV = TRUE
)

# Estimerer for sygeplejersker kvote 1
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker_k1 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

# Estimerer for sygeplejersker kvote 2
gsk_df <- df_sygeplejerske_k2 |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 1)")

out_sygeplejersker_k2 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

```


```{r}
# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012)

controls_df_lærer <- cbind(ct_df_lærer, out_lærer[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Folkeskolelærer")

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  t = as.vector(out_sygeplejersker_k1[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k1[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k1[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k1 <- cbind(ct_df_sygeplejersker_k1, out_sygeplejersker_k1[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 1)")

# Laver data frame for sygeplejersker k2
ct_df_sygeplejersker_k2 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 2)",
  t = as.vector(out_sygeplejersker_k2[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k2[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k2[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k2 <- cbind(ct_df_sygeplejersker_k2, out_sygeplejersker_k2[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 2)")

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker_k1,
  ct_df_sygeplejersker_k2
)

complete_lærer <- df_lærer |> 
  filter(år <= 2019 & !is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  summarise(n = n()) |> 
  filter(n == max(n))

complete_sygeplejerske_k1 <- df_sygeplejerske |> 
  filter(!is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  summarise(n = n()) |> 
  filter(n == max(n))

complete_sygeplejerske_k2 <- df_sygeplejerske_k2 |> 
  filter(!is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  summarise(n = n()) |> 
  filter(n == max(n))

controls_df <- rbind(
  controls_df_lærer[controls_df_lærer$t <= 2019,] |> 
    filter(kontrol_uddannelse %in% complete_lærer$uddannelse),
  controls_df_sygeplejerske_k1 |> 
    filter(kontrol_uddannelse %in% complete_sygeplejerske_k1$uddannelse),
  controls_df_sygeplejerske_k2 |> 
    filter(kontrol_uddannelse %in% complete_sygeplejerske_k2$uddannelse)) |> 
  filter(ansøgere > 0)

# Laver plot
ct_plots <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_line(
    data = controls_df,
    aes(x = t, y = ansøgere, group = kontrol_uddannelse, linetype = "Donoruddannelser"),
    inherit.aes = FALSE,
    color = "grey",
    alpha = 0.5) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed",
      "Donoruddannelser" = "solid")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = "Ansøgninger",
    linetype = NULL) +
  ggtitle("A. Faktisk og kontrafaktisk udvikling")
  
# Making gap data frames
# Bemærk: Pre-treatment konfidensintervaller beregnes pba. MSPE i CV.
# Man får dermed at den beregnes som sqrt(MSPE / N_pre)
gap_lærer <- ct_df_lærer |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker_k1 <- ct_df_sygeplejersker_k1 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k1[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker_k2 <- ct_df_sygeplejersker_k2 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k2[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k2[["MSPE"]] / sum(as.vector(out_sygeplejersker_k2[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k2[["MSPE"]] / sum(as.vector(out_sygeplejersker_k2[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_df <- rbind(
  gap_lærer[gap_lærer$t <= 2019,],
  gap_sygeplejersker_k1,
  gap_sygeplejersker_k2
)

gap_plots <- ggplot(gap_df, aes(x = t, y = estimate)) +
  geom_line(color = "black", linewidth = 1) +
  geom_ribbon(aes(ymin = CI.lower, ymax = CI.upper), alpha = 0.3) + 
  geom_hline(yintercept = 0) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  facet_wrap(~uddannelse, ncol = 1, scales = "free") +
  scale_x_continuous(expand = c(0, 0)) +
  theme_bw() +
  labs(x = NULL,
       y = "Estimat") +
  ggtitle("B. Effektestimater")

ct_plots | gap_plots

ggsave(filename = "plots/main_results.pdf",
       width = 9,
       height = 10)

```

### Tabel

```{r}
resultater_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  Term = c("T1", "T2", "T3", "T4"),
  Coefficient = c(
    gap_lærer$estimate[gap_lærer$t == 2013],
    gap_lærer$estimate[gap_lærer$t == 2014],
    gap_lærer$estimate[gap_lærer$t == 2015],
    gap_lærer$estimate[gap_lærer$t == 2016]
  ),
  Std.Error = c(
    gap_lærer$S.E.[gap_lærer$t == 2013],
    gap_lærer$S.E.[gap_lærer$t == 2014],
    gap_lærer$S.E.[gap_lærer$t == 2015],
    gap_lærer$S.E.[gap_lærer$t == 2016]
  ),
  p.Value = c(
    gap_lærer$p.value[gap_lærer$t == 2013],
    gap_lærer$p.value[gap_lærer$t == 2014],
    gap_lærer$p.value[gap_lærer$t == 2015],
    gap_lærer$p.value[gap_lærer$t == 2016]))

fm_lærer <- lm(Coefficient ~ Term, data = resultater_lærer)

resultater_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  Term = c("T1", "T2", "T3", "T4"),
  Coefficient = c(
    gap_sygeplejersker_k1$estimate[gap_sygeplejersker_k1$t == 2021],
    gap_sygeplejersker_k1$estimate[gap_sygeplejersker_k1$t == 2022],
    gap_sygeplejersker_k1$estimate[gap_sygeplejersker_k1$t == 2023],
    gap_sygeplejersker_k1$estimate[gap_sygeplejersker_k1$t == 2024]
  ),
  Std.Error = c(
    gap_sygeplejersker_k1$S.E.[gap_sygeplejersker_k1$t == 2021],
    gap_sygeplejersker_k1$S.E.[gap_sygeplejersker_k1$t == 2022],
    gap_sygeplejersker_k1$S.E.[gap_sygeplejersker_k1$t == 2023],
    gap_sygeplejersker_k1$S.E.[gap_sygeplejersker_k1$t == 2024]
  ),
  p.Value = c(
    gap_sygeplejersker_k1$p.value[gap_sygeplejersker_k1$t == 2021],
    gap_sygeplejersker_k1$p.value[gap_sygeplejersker_k1$t == 2022],
    gap_sygeplejersker_k1$p.value[gap_sygeplejersker_k1$t == 2023],
    gap_sygeplejersker_k1$p.value[gap_sygeplejersker_k1$t == 2024]))

fm_sygeplejersker_k1 <- lm(Coefficient ~ Term, data = resultater_sygeplejersker_k1)

resultater_sygeplejersker_k2 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 2)",
  Term = c("T1", "T2", "T3", "T4"),
  Coefficient = c(
    gap_sygeplejersker_k2$estimate[gap_sygeplejersker_k2$t == 2021],
    gap_sygeplejersker_k2$estimate[gap_sygeplejersker_k2$t == 2022],
    gap_sygeplejersker_k2$estimate[gap_sygeplejersker_k2$t == 2023],
    gap_sygeplejersker_k2$estimate[gap_sygeplejersker_k2$t == 2024]
  ),
  Std.Error = c(
    gap_sygeplejersker_k2$S.E.[gap_sygeplejersker_k2$t == 2021],
    gap_sygeplejersker_k2$S.E.[gap_sygeplejersker_k2$t == 2022],
    gap_sygeplejersker_k2$S.E.[gap_sygeplejersker_k2$t == 2023],
    gap_sygeplejersker_k2$S.E.[gap_sygeplejersker_k2$t == 2024]
  ),
  p.Value = c(
    gap_sygeplejersker_k2$p.value[gap_sygeplejersker_k2$t == 2021],
    gap_sygeplejersker_k2$p.value[gap_sygeplejersker_k2$t == 2022],
    gap_sygeplejersker_k2$p.value[gap_sygeplejersker_k2$t == 2023],
    gap_sygeplejersker_k2$p.value[gap_sygeplejersker_k2$t == 2024]))

fm_sygeplejersker_k2 <- lm(Coefficient ~ Term, data = resultater_sygeplejersker_k2)

rbind(resultater_lærer, resultater_sygeplejersker_k1, resultater_sygeplejersker_k2)


```



## Folkeskolelærer

### Panelstrukturen

```{r}
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

panelview(ansøgninger_main ~ d, index = c("uddannelse", "år"), pre.post = TRUE, data = gsk_df)
```

### Udvikling i ansøgninger
```{r}
panelview(ansøgninger_main ~ d, index = c("uddannelse", "år"), type = "outcome", data = gsk_df)
```

### Syntetisk kontrol fit

```{r}
out <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4
)

plot(out, type = "ct")

```

### Koefficient-plot

```{r}
plot(out, type = "gap")
```


### Summary

```{r}
print(out)
```




## Sygeplejersker (kvote 1)

### Panelstrukturen

```{r}
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

panelview(ansøgninger_main ~ d, index = c("uddannelse", "år"), pre.post = TRUE, data = gsk_df)
```

### Udvikling i ansøgninger
```{r}
panelview(ansøgninger_main ~ d, index = c("uddannelse", "år"), type = "outcome", data = gsk_df)
```

### Syntetisk kontrol fit

```{r}
out <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

plot(out, type = "ct")

```

### Koefficient-plot

```{r}
plot(out, type = "gap")
```


### Summary

```{r}
print(out)
```




## Sygeplejersker (kvote 2)

### Panelstrukturen

```{r}
gsk_df <- df_sygeplejerske_k2 |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 1)")

panelview(ansøgninger_main ~ d, index = c("uddannelse", "år"), pre.post = TRUE, data = gsk_df)
```

### Udvikling i ansøgninger
```{r}
panelview(ansøgninger_main ~ d, index = c("uddannelse", "år"), type = "outcome", data = gsk_df)
```

### Syntetisk kontrol fit

```{r}
out <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

plot(out, type = "ct")

```

### Koefficient-plot

```{r}
plot(out, type = "gap")
```


### Summary

```{r}
print(out)
```

:::



# Robusthedstests

::: panel-tabset

## Figur til paper

```{r, include=FALSE}
# ALLE FØRSTEPRIORITETSANSØGNINGER

# Estimerer alle modellerne og samler plots
robust_df <- df |> 
  mutate(uddannelse = case_when(
    treatment == "Lærerlockout" ~ "Folkeskolelærer (alle)",
    treatment == "Sygeplejerskestrejke" ~ "Sygeplejerske (alle)",
    .default = uddannelse))

# Estimerer for lærere
gsk_df <- robust_df |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_prio1",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  CV = TRUE,
  nlambda = 20
)

# Estimerer for sygeplejersker 
gsk_df <- robust_df |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker <- gsynth(
  Y = "ansøgninger_prio1",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012) |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker <- data.frame(
  uddannelse = "Sygeplejerske",
  t = as.vector(out_sygeplejersker[["time"]]),
  faktisk = as.vector(out_sygeplejersker[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker[["Y.ct"]]),
  t0 = 2020) |> 
   mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker[["MSPE"]] / sum(as.vector(out_sygeplejersker[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker[["MSPE"]] / sum(as.vector(out_sygeplejersker[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker
)

# Laver plot
plot_alle_ansøgninger <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_ribbon(
    aes(ymin = sk - abs(estimate - CI.lower),
        ymax = sk + abs(estimate - CI.upper)),
    alpha = 0.3) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  guides(linetype = "none") +
  labs(
    x = NULL,
    y = "Ansøgninger",
    linetype = NULL) +
  ggtitle("A. Alle førsteprioritetsansøgninger")
  

```


```{r, include=FALSE}
# IFE-ESTIMATOR

# Estimerer for lærere
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  EM = TRUE,
  se = TRUE,
  force = "two-way",
  inference = "parametric",
  min.T0 = 6,
  r = 4,
  nboots = 1000,
  seed = 4,
  CV = FALSE
)

# Estimerer for sygeplejersker kvote 1
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker_k1 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  EM = TRUE,
  se = TRUE,
  force = "two-way",
  inference = "parametric",
  min.T0 = 7,
  nboots = 1000,
  seed = 4,
  nlambda = 20,
)


# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012) |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]]))

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  t = as.vector(out_sygeplejersker_k1[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k1[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k1[["Y.ct"]]),
  t0 = 2020) |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k1[["est.att"]])) 

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker_k1
)

# Laver plot
plot_ife <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_ribbon(
    aes(ymin = sk - abs(estimate - CI.lower),
        ymax = sk + abs(estimate - CI.upper)),
    alpha = 0.3) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = NULL,
    linetype = NULL) +
  ggtitle("B. IFE-estimator")
  
```


```{r, include=FALSE}
# TOTALE ANSØGNINGER SOM OUTCOME

# Estimerer alle modellerne og samler plots

# Estimerer for lærere
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_robust_total",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 4,
  nboots = 1000,
  seed = 4,
  CV = TRUE,
  nlambda = 20
)

# Estimerer for sygeplejersker kvote 1
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker_k1 <- gsynth(
  Y = "ansøgninger_robust_total",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012) |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  t = as.vector(out_sygeplejersker_k1[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k1[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k1[["Y.ct"]]),
  t0 = 2020) |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k1[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))


# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker_k1
)

plot_totale_ansøgninger <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_ribbon(
    aes(ymin = sk - abs(estimate - CI.lower),
        ymax = sk + abs(estimate - CI.upper)),
    alpha = 0.3) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  guides(linetype = "none") +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = NULL,
    linetype = NULL) +
  ggtitle("C. Totale ansøgninger (alle prioriteter)")

```


```{r, include=FALSE}

# IN SPACE PLACEBOS

# Placebo-tests lærere
place_placebos_lærer <- data.frame()

complete_obs <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
         treatment != "Sygeplejerskestrejke") |> 
  filter(!is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  mutate(n = n()) |> 
  ungroup() |> 
  filter(n >= 28)

for (u in unique(complete_obs$uddannelse)) {
  
  gsk_df <- df_lærer |> 
    filter(uddannelsesniveau == "Prof. bachelor" &
             treatment != "Sygeplejerskestrejke") |> 
    mutate(d = if_else(
      uddannelse == u & år >= 2013,
      1,
      0))
  
  out_lærer <- gsynth(
    Y = "ansøgninger_main",
    D = "d",
    X = c("andel_kvinder_prio1", "karakter"),
    data = gsk_df,
    index = c("uddannelse", "år"),
    na.rm = TRUE,
    se = TRUE,
    force = "two-way",
    estimator = "mc",
    min.T0 = 5,
    nboots = 1000,
    seed = 4,
    CV = TRUE)
  
  temp <- data.frame(
    uddannelse = u,
    t = as.vector(out_lærer[["time"]]),
    faktisk = as.vector(out_lærer[["Y.tr"]]),
    sk = as.vector(out_lærer[["Y.ct"]]),
    t0 = 2012)
  
  place_placebos_lærer <- rbind(place_placebos_lærer, temp)
  
}

# Placebo-tests sygeplejersker
place_placebos_sygeplejersker <- data.frame()

complete_obs <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
         treatment != "Lærerlockout") |> 
  filter(!is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  mutate(n = n()) |> 
  ungroup() |> 
  filter(n >= 28)

for (u in unique(complete_obs$uddannelse)) {
  
  gsk_df <- df_sygeplejerske |> 
    filter(uddannelsesniveau == "Prof. bachelor" &
             treatment != "Lærerlockout") |> 
    mutate(d = if_else(
      uddannelse == u & år >= 2021,
      1,
      0))
  
  out_lærer <- gsynth(
    Y = "ansøgninger_main",
    D = "d",
    X = c("andel_kvinder_prio1"),
    data = gsk_df,
    index = c("uddannelse", "år"),
    na.rm = TRUE,
    se = TRUE,
    force = "two-way",
    estimator = "mc",
    min.T0 = 5,
    nboots = 1000,
    seed = 4,
    CV = TRUE)
  
  temp <- data.frame(
    uddannelse = u,
    t = as.vector(out_lærer[["time"]]),
    faktisk = as.vector(out_lærer[["Y.tr"]]),
    sk = as.vector(out_lærer[["Y.ct"]]),
    t0 = 2020)
  
  place_placebos_sygeplejersker <- rbind(place_placebos_sygeplejersker, temp)
}

place_placebos_lærer$group <- "Folkeskolelærer"
place_placebos_sygeplejersker$group <- "Sygeplejerske (kvote 1)"

place_placebos <- rbind(
  place_placebos_lærer[place_placebos_lærer$t <= 2019,],
  place_placebos_sygeplejersker) |> 
  mutate(
    type = if_else(
      uddannelse %in% c("Folkeskolelærer", "Sygeplejerske (kvote 1)"),
      "Faktisk",
      "Placebo"),
    estimat = faktisk - sk)

plot_placebo <- place_placebos |> 
  ggplot(aes(x = t, y = estimat, group = uddannelse, color = type)) +
  geom_line(data = place_placebos[place_placebos$type != "Faktisk",]) +
  geom_line(data = place_placebos[place_placebos$type == "Faktisk",],
            linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  scale_x_continuous(expand = c(0, 0)) +
  scale_color_manual(
    values = c(
      "Placebo" = "grey",
      "Faktisk" = "black")) +
  facet_wrap(~group, ncol = 1, scales = "free") +
  labs(y = "Estimat",
       x = NULL,
       color = NULL) +
  theme_bw() +
  theme(legend.position = "bottom") +
  ggtitle("D. In-place placebos")

```


```{r}
plot_alle_ansøgninger | plot_ife | plot_totale_ansøgninger | plot_placebo

ggsave(filename = "plots/robusthedstests.pdf",
       width = 16,
       height = 9)
```


## Balanceret tidsserie

```{r, include=FALSE}
# Estimerer alle modellerne og samler plots

# Estimerer for lærere
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")|> 
    group_by(uddannelse) |> 
    mutate(n = n()) |> 
    ungroup() |> 
    filter(n >= 28)

out_lærer <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  CV = TRUE
)

# Estimerer for sygeplejersker kvote 1
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")|> 
    group_by(uddannelse) |> 
    mutate(n = n()) |> 
    ungroup() |> 
    filter(n >= 28)

out_sygeplejersker_k1 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

# Estimerer for sygeplejersker kvote 2
gsk_df <- df_sygeplejerske_k2 |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 1)")|> 
    group_by(uddannelse) |> 
    mutate(n = n()) |> 
    ungroup() |> 
    filter(n >= 28)

out_sygeplejersker_k2 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

```


```{r}
# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012)

controls_df_lærer <- cbind(ct_df_lærer, out_lærer[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Folkeskolelærer")

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  t = as.vector(out_sygeplejersker_k1[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k1[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k1[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k1 <- cbind(ct_df_sygeplejersker_k1, out_sygeplejersker_k1[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 1)")

# Laver data frame for sygeplejersker k2
ct_df_sygeplejersker_k2 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 2)",
  t = as.vector(out_sygeplejersker_k2[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k2[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k2[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k2 <- cbind(ct_df_sygeplejersker_k2, out_sygeplejersker_k2[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 2)")

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker_k1,
  ct_df_sygeplejersker_k2
)

controls_df <- rbind(
  controls_df_lærer[controls_df_lærer$t <= 2019,],
  controls_df_sygeplejerske_k1,
  controls_df_sygeplejerske_k2) |> 
  filter(ansøgere > 0)

# Laver plot
ct_plots <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_line(
    data = controls_df,
    aes(x = t, y = ansøgere, group = kontrol_uddannelse, linetype = "Donoruddannelser"),
    inherit.aes = FALSE,
    color = "grey",
    alpha = 0.5) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed",
      "Donoruddannelser" = "solid")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = "Ansøgninger",
    linetype = NULL) +
  ggtitle("A. Faktisk og kontrafaktisk udvikling")
  
# Making gap data frames
# Bemærk: Pre-treatment konfidensintervaller beregnes pba. MSPE i CV.
# Man får dermed at den beregnes som sqrt(MSPE / N_pre)
gap_lærer <- ct_df_lærer |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker_k1 <- ct_df_sygeplejersker_k1 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k1[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker_k2 <- ct_df_sygeplejersker_k2 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k2[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k2[["MSPE"]] / sum(as.vector(out_sygeplejersker_k2[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k2[["MSPE"]] / sum(as.vector(out_sygeplejersker_k2[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_df <- rbind(
  gap_lærer[gap_lærer$t <= 2019,],
  gap_sygeplejersker_k1,
  gap_sygeplejersker_k2
)

gap_plots <- ggplot(gap_df, aes(x = t, y = estimate)) +
  geom_line(color = "black", linewidth = 1) +
  geom_ribbon(aes(ymin = CI.lower, ymax = CI.upper), alpha = 0.3) + 
  geom_hline(yintercept = 0) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  facet_wrap(~uddannelse, ncol = 1, scales = "free") +
  scale_x_continuous(expand = c(0, 0)) +
  theme_bw() +
  labs(x = NULL,
       y = "Estimat") +
  ggtitle("B. Effektestimater")

ct_plots | gap_plots


```


## Ansøgninger ikke opdelt

```{r, include=FALSE}
# Estimerer alle modellerne og samler plots
robust_df <- df |> 
  mutate(uddannelse = case_when(
    treatment == "Lærerlockout" ~ "Folkeskolelærer (alle)",
    treatment == "Sygeplejerskestrejke" ~ "Sygeplejerske (alle)",
    .default = uddannelse))

# Estimerer for lærere
gsk_df <- robust_df |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_prio1",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  CV = TRUE,
  nlambda = 20
)

# Estimerer for sygeplejersker 
gsk_df <- robust_df |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker <- gsynth(
  Y = "ansøgninger_prio1",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

```


```{r}
# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012)

controls_df_lærer <- cbind(ct_df_lærer, out_lærer[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Folkeskolelærer (alle)")

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker <- data.frame(
  uddannelse = "Sygeplejerske",
  t = as.vector(out_sygeplejersker[["time"]]),
  faktisk = as.vector(out_sygeplejersker[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske <- cbind(ct_df_sygeplejersker, out_sygeplejersker[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (alle)")

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker
)

controls_df <- rbind(
  controls_df_lærer[controls_df_lærer$t <= 2019,],
  controls_df_sygeplejerske) |> 
  filter(ansøgere > 0)

# Laver plot
ct_plots <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_line(
    data = controls_df,
    aes(x = t, y = ansøgere, group = kontrol_uddannelse, linetype = "Donoruddannelser"),
    inherit.aes = FALSE,
    color = "grey",
    alpha = 0.5) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed",
      "Donoruddannelser" = "solid")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = "Ansøgninger",
    linetype = NULL) +
  ggtitle("A. Faktisk og kontrafaktisk udvikling")
  
# Making gap data frames
# Bemærk: Pre-treatment konfidensintervaller beregnes pba. MSPE i CV.
# Man får dermed at den beregnes som sqrt(MSPE / N_pre)
gap_lærer <- ct_df_lærer |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker <- ct_df_sygeplejersker |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker[["MSPE"]] / sum(as.vector(out_sygeplejersker[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker[["MSPE"]] / sum(as.vector(out_sygeplejersker[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_df <- rbind(
  gap_lærer[gap_lærer$t <= 2019,],
  gap_sygeplejersker
)

gap_plots <- ggplot(gap_df, aes(x = t, y = estimate)) +
  geom_line(color = "black", linewidth = 1) +
  geom_ribbon(aes(ymin = CI.lower, ymax = CI.upper), alpha = 0.3) + 
  geom_hline(yintercept = 0) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  facet_wrap(~uddannelse, ncol = 1, scales = "free_x") +
  scale_x_continuous(expand = c(0, 0)) +
  theme_bw() +
  labs(x = NULL,
       y = "Estimat") +
  ggtitle("B. Effektestimater")

ct_plots | gap_plots


```

## IFE-estimator

```{r, include=FALSE}
# Estimerer for lærere
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  EM = TRUE,
  se = TRUE,
  force = "two-way",
  inference = "parametric",
  min.T0 = 6,
  r = 4,
  nboots = 1000,
  seed = 4,
  CV = FALSE
)

# Estimerer for sygeplejersker kvote 1
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker_k1 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  EM = TRUE,
  se = TRUE,
  force = "two-way",
  inference = "parametric",
  min.T0 = 7,
  nboots = 1000,
  seed = 4,
  nlambda = 20,
)

# Estimerer for sygeplejersker kvote 2
gsk_df <- df_sygeplejerske_k2 |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 1)")

out_sygeplejersker_k2 <- gsynth(
  Y = "ansøgninger_main",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  EM = TRUE,
  force = "two-way",
  inference = "parametric",
  min.T0 = 7,
  nboots = 1000,
  seed = 4,
  nlambda = 20,
)
```


```{r}
# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012)

controls_df_lærer <- cbind(ct_df_lærer, out_lærer[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Folkeskolelærer")

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  t = as.vector(out_sygeplejersker_k1[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k1[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k1[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k1 <- cbind(ct_df_sygeplejersker_k1, out_sygeplejersker_k1[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 1)")

# Laver data frame for sygeplejersker k2
ct_df_sygeplejersker_k2 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 2)",
  t = as.vector(out_sygeplejersker_k2[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k2[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k2[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k2 <- cbind(ct_df_sygeplejersker_k2, out_sygeplejersker_k2[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 2)")

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker_k1,
  ct_df_sygeplejersker_k2
)

controls_df <- rbind(
  controls_df_lærer[controls_df_lærer$t <= 2019,],
  controls_df_sygeplejerske_k1,
  controls_df_sygeplejerske_k2) |> 
  filter(ansøgere > 0)

# Laver plot
ct_plots <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_line(
    data = controls_df,
    aes(x = t, y = ansøgere, group = kontrol_uddannelse, linetype = "Donoruddannelser"),
    inherit.aes = FALSE,
    color = "grey",
    alpha = 0.5) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed",
      "Donoruddannelser" = "solid")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = "Ansøgninger",
    linetype = NULL) +
  ggtitle("A. Faktisk og kontrafaktisk udvikling")
  
# Making gap data frames
# Bemærk: Pre-treatment konfidensintervaller beregnes pba. MSPE i CV.
# Man får dermed at den beregnes som sqrt(MSPE / N_pre)
gap_lærer <- ct_df_lærer |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]]))

gap_sygeplejersker_k1 <- ct_df_sygeplejersker_k1 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k1[["est.att"]])) 

gap_sygeplejersker_k2 <- ct_df_sygeplejersker_k2 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k2[["est.att"]])) 

gap_df <- rbind(
  gap_lærer[gap_lærer$t <= 2019,],
  gap_sygeplejersker_k1,
  gap_sygeplejersker_k2
)

gap_plots <- ggplot(gap_df, aes(x = t, y = estimate)) +
  geom_line(color = "black", linewidth = 1) +
  geom_ribbon(aes(ymin = CI.lower, ymax = CI.upper), alpha = 0.3) + 
  geom_hline(yintercept = 0) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  facet_wrap(~uddannelse, ncol = 1, scales = "free_x") +
  scale_x_continuous(expand = c(0, 0)) +
  theme_bw() +
  labs(x = NULL,
       y = "Estimat") +
  ggtitle("B. Effektestimater")

ct_plots | gap_plots


```



## Totale ansøgninger som outcome


```{r, include=FALSE}
# Estimerer alle modellerne og samler plots

# Estimerer for lærere
gsk_df <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Sygeplejerskestrejke")

out_lærer <- gsynth(
  Y = "ansøgninger_robust_total",
  D = "d",
  X = c("andel_kvinder_prio1", "karakter"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 4,
  nboots = 1000,
  seed = 4,
  CV = TRUE,
  nlambda = 20
)

# Estimerer for sygeplejersker kvote 1
gsk_df <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 2)")

out_sygeplejersker_k1 <- gsynth(
  Y = "ansøgninger_robust_total",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)

# Estimerer for sygeplejersker kvote 2
gsk_df <- df_sygeplejerske_k2 |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
           treatment != "Lærerlockout" &
           uddannelse != "Sygeplejerske (kvote 1)")

out_sygeplejersker_k2 <- gsynth(
  Y = "ansøgninger_robust_total",
  D = "d",
  X = c("andel_kvinder_prio1"),
  data = gsk_df,
  index = c("uddannelse", "år"),
  na.rm = TRUE,
  se = TRUE,
  force = "two-way",
  estimator = "mc",
  min.T0 = 5,
  nboots = 1000,
  seed = 4,
  nlambda = 20
)


```


```{r}
# Laver data frame for lærere
ct_df_lærer <- data.frame(
  uddannelse = "Folkeskolelærer",
  t = as.vector(out_lærer[["time"]]),
  faktisk = as.vector(out_lærer[["Y.tr"]]),
  sk = as.vector(out_lærer[["Y.ct"]]),
  t0 = 2012)

controls_df_lærer <- cbind(ct_df_lærer, out_lærer[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Folkeskolelærer")

# Laver data frame for sygeplejersker k1
ct_df_sygeplejersker_k1 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 1)",
  t = as.vector(out_sygeplejersker_k1[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k1[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k1[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k1 <- cbind(ct_df_sygeplejersker_k1, out_sygeplejersker_k1[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 1)")

# Laver data frame for sygeplejersker k2
ct_df_sygeplejersker_k2 <- data.frame(
  uddannelse = "Sygeplejerske (kvote 2)",
  t = as.vector(out_sygeplejersker_k2[["time"]]),
  faktisk = as.vector(out_sygeplejersker_k2[["Y.tr"]]),
  sk = as.vector(out_sygeplejersker_k2[["Y.ct"]]),
  t0 = 2020)

controls_df_sygeplejerske_k2 <- cbind(ct_df_sygeplejersker_k2, out_sygeplejersker_k2[["Y.dat"]]) |> 
  pivot_longer(cols = -c(uddannelse, t, faktisk, sk, t0),
               names_to = "kontrol_uddannelse",
               values_to = "ansøgere") |> 
  filter(kontrol_uddannelse != "Sygeplejerske (kvote 2)")

# Samler til 1 data frame
ct_df <- rbind(
  ct_df_lærer[ct_df_lærer$t <= 2019,],
  ct_df_sygeplejersker_k1,
  ct_df_sygeplejersker_k2
)

controls_df <- rbind(
  controls_df_lærer[controls_df_lærer$t <= 2019,],
  controls_df_sygeplejerske_k1,
  controls_df_sygeplejerske_k2) |> 
  filter(ansøgere > 0)

# Laver plot
ct_plots <- ct_df |> 
  ggplot(aes(y = faktisk, x = t)) +
  geom_line(
    aes(linetype = "Faktisk"),
    color = "black",
    linewidth = 1) +
  geom_line(
    aes(y = sk, linetype = "Syntetisk"),
    linewidth = 1) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  geom_line(
    data = controls_df,
    aes(x = t, y = ansøgere, group = kontrol_uddannelse, linetype = "Donoruddannelser"),
    inherit.aes = FALSE,
    color = "grey",
    alpha = 0.5) +
  scale_linetype_manual(
    values = c(
      "Faktisk" = "solid",
      "Syntetisk" = "dashed",
      "Donoruddannelser" = "solid")) +
  scale_x_continuous(expand = c(0, 0)) +
  facet_wrap(~uddannelse, scales = "free", ncol = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(
    x = NULL,
    y = "Ansøgninger",
    linetype = NULL) +
  ggtitle("A. Faktisk og kontrafaktisk udvikling")
  
# Making gap data frames
# Bemærk: Pre-treatment konfidensintervaller beregnes pba. MSPE i CV.
# Man får dermed at den beregnes som sqrt(MSPE / N_pre)
gap_lærer <- ct_df_lærer |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_lærer[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_lærer[["MSPE"]] / sum(as.vector(out_lærer[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker_k1 <- ct_df_sygeplejersker_k1 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k1[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k1[["MSPE"]] / sum(as.vector(out_sygeplejersker_k1[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_sygeplejersker_k2 <- ct_df_sygeplejersker_k2 |> 
  mutate(estimate = faktisk - sk) |> 
  bind_cols(as.data.frame(out_sygeplejersker_k2[["est.att"]])) |> 
  mutate(
    CI.lower = if_else(
      n.Treated == 0,
      estimate - 1.96 * sqrt(out_sygeplejersker_k2[["MSPE"]] / sum(as.vector(out_sygeplejersker_k2[["est.att"]][,"n.Treated"]) == 0)),
      CI.lower),
    CI.upper = if_else(
      n.Treated == 0,
      estimate + 1.96 * sqrt(out_sygeplejersker_k2[["MSPE"]] / sum(as.vector(out_sygeplejersker_k2[["est.att"]][,"n.Treated"]) == 0)),
      CI.upper))

gap_df <- rbind(
  gap_lærer[gap_lærer$t <= 2019,],
  gap_sygeplejersker_k1,
  gap_sygeplejersker_k2
)

gap_plots <- ggplot(gap_df, aes(x = t, y = estimate)) +
  geom_line(color = "black", linewidth = 1) +
  geom_ribbon(aes(ymin = CI.lower, ymax = CI.upper), alpha = 0.3) + 
  geom_hline(yintercept = 0) +
  geom_vline(aes(xintercept = t0), linetype = "dotted") +
  facet_wrap(~uddannelse, ncol = 1, scales = "free_x") +
  scale_x_continuous(expand = c(0, 0)) +
  theme_bw() +
  labs(x = NULL,
       y = "Estimat") +
  ggtitle("B. Effektestimater")

ct_plots | gap_plots

```


## In-place placebos

::: panel-tabset

### Lærere

```{r, include=FALSE}

place_placebos_lærer <- data.frame()

complete_obs <- df_lærer |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
         treatment != "Sygeplejerskestrejke") |> 
  filter(!is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  mutate(n = n()) |> 
  ungroup() |> 
  filter(n >= 28)

for (u in unique(complete_obs$uddannelse)) {
  
  gsk_df <- df_lærer |> 
    filter(uddannelsesniveau == "Prof. bachelor" &
             treatment != "Sygeplejerskestrejke") |> 
    mutate(d = if_else(
      uddannelse == u & år >= 2013,
      1,
      0))
  
  out_lærer <- gsynth(
    Y = "ansøgninger_main",
    D = "d",
    X = c("andel_kvinder_prio1", "karakter"),
    data = gsk_df,
    index = c("uddannelse", "år"),
    na.rm = TRUE,
    se = TRUE,
    force = "two-way",
    estimator = "mc",
    min.T0 = 5,
    #nboots = 1000,
    seed = 4,
    CV = TRUE)
  
  temp <- data.frame(
    uddannelse = u,
    t = as.vector(out_lærer[["time"]]),
    faktisk = as.vector(out_lærer[["Y.tr"]]),
    sk = as.vector(out_lærer[["Y.ct"]]),
    t0 = 2012)
  
  place_placebos_lærer <- rbind(place_placebos_lærer, temp)
  
}

```

```{r}
place_placebos_lærer |> 
  mutate(estimate = faktisk - sk,
         d = if_else(
           uddannelse == "Folkeskolelærer",
           "Faktisk",
           "Placebo")) |> 
  ggplot(aes(x = t, y = estimate, group = uddannelse, color = d)) +
  geom_line() +
  xlim(c(1997, 2019)) +
  scale_color_manual(
    values = c(
      "Placebo" = "grey",
      "Faktisk" = "black")) +
  theme_bw()
```


### Sygeplejersker

```{r, include=FALSE}

place_placebos_sygeplejersker <- data.frame()

complete_obs <- df_sygeplejerske |> 
  filter(uddannelsesniveau == "Prof. bachelor" &
         treatment != "Lærerlockout") |> 
  filter(!is.na(ansøgninger_main)) |> 
  group_by(uddannelse) |> 
  mutate(n = n()) |> 
  ungroup() |> 
  filter(n >= 28)

for (u in unique(complete_obs$uddannelse)) {
  
  gsk_df <- df_sygeplejerske |> 
    filter(uddannelsesniveau == "Prof. bachelor" &
             treatment != "Lærerlockout") |> 
    mutate(d = if_else(
      uddannelse == u & år >= 2021,
      1,
      0))
  
  out_lærer <- gsynth(
    Y = "ansøgninger_main",
    D = "d",
    X = c("andel_kvinder_prio1"),
    data = gsk_df,
    index = c("uddannelse", "år"),
    na.rm = TRUE,
    se = TRUE,
    force = "two-way",
    estimator = "mc",
    min.T0 = 5,
    #nboots = 1000,
    seed = 4,
    CV = TRUE)
  
  temp <- data.frame(
    uddannelse = u,
    t = as.vector(out_lærer[["time"]]),
    faktisk = as.vector(out_lærer[["Y.tr"]]),
    sk = as.vector(out_lærer[["Y.ct"]]),
    t0 = 2020)
  
  place_placebos_sygeplejersker <- rbind(place_placebos_sygeplejersker, temp)
  
}

place_placebos_sygeplejersker <- place_placebos_sygeplejersker |> 
  mutate(estimate = faktisk - sk,
         d = if_else(
           uddannelse == "Sygeplejerske (kvote 1)",
           "Faktisk",
           "Placebo"))
```

```{r}
place_placebos_sygeplejersker |> 
  ggplot(aes(x = t, y = estimate, group = uddannelse, color = d)) +
  geom_line() +
  xlim(c(1997, 2024)) +
  scale_color_manual(
    values = c(
      "Placebo" = "grey",
      "Faktisk" = "black")) +
  theme_bw()
```

:::

:::

